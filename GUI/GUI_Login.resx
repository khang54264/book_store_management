<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="errLogin.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>